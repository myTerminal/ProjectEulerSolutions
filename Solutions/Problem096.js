exports.run = function () {
    var lines,
        solvedGrid,
        threeDigitNumber,
        sum = 0,
        grids = [[[0,0,3,0,2,0,6,0,0],
                  [9,0,0,3,0,5,0,0,1],
                  [0,0,1,8,0,6,4,0,0],
                  [0,0,8,1,0,2,9,0,0],
                  [7,0,0,0,0,0,0,0,8],
                  [0,0,6,7,0,8,2,0,0],
                  [0,0,2,6,0,9,5,0,0],
                  [8,0,0,2,0,3,0,0,9],
                  [0,0,5,0,1,0,3,0,0]],
                 [[2,0,0,0,8,0,3,0,0],
                  [0,6,0,0,7,0,0,8,4],
                  [0,3,0,5,0,0,2,0,9],
                  [0,0,0,1,0,5,4,0,8],
                  [0,0,0,0,0,0,0,0,0],
                  [4,0,2,7,0,6,0,0,0],
                  [3,0,1,0,0,7,0,4,0],
                  [7,2,0,0,4,0,0,6,0],
                  [0,0,4,0,1,0,0,0,3]],
                 [[0,0,0,0,0,0,9,0,7],
                  [0,0,0,4,2,0,1,8,0],
                  [0,0,0,7,0,5,0,2,6],
                  [1,0,0,9,0,4,0,0,0],
                  [0,5,0,0,0,0,0,4,0],
                  [0,0,0,5,0,7,0,0,9],
                  [9,2,0,1,0,8,0,0,0],
                  [0,3,4,0,5,9,0,0,0],
                  [5,0,7,0,0,0,0,0,0]],
                 [[0,3,0,0,5,0,0,4,0],
                  [0,0,8,0,1,0,5,0,0],
                  [4,6,0,0,0,0,0,1,2],
                  [0,7,0,5,0,2,0,8,0],
                  [0,0,0,6,0,3,0,0,0],
                  [0,4,0,1,0,9,0,3,0],
                  [2,5,0,0,0,0,0,9,8],
                  [0,0,1,0,2,0,6,0,0],
                  [0,8,0,0,6,0,0,2,0]],
                 [[0,2,0,8,1,0,7,4,0],
                  [7,0,0,0,0,3,1,0,0],
                  [0,9,0,0,0,2,8,0,5],
                  [0,0,9,0,4,0,0,8,7],
                  [4,0,0,2,0,8,0,0,3],
                  [1,6,0,0,3,0,2,0,0],
                  [3,0,2,7,0,0,0,6,0],
                  [0,0,5,6,0,0,0,0,8],
                  [0,7,6,0,5,1,0,9,0]],
                 [[1,0,0,9,2,0,0,0,0],
                  [5,2,4,0,1,0,0,0,0],
                  [0,0,0,0,0,0,0,7,0],
                  [0,5,0,0,0,8,1,0,2],
                  [0,0,0,0,0,0,0,0,0],
                  [4,0,2,7,0,0,0,9,0],
                  [0,6,0,0,0,0,0,0,0],
                  [0,0,0,0,3,0,9,4,5],
                  [0,0,0,0,7,1,0,0,6]],
                 [[0,4,3,0,8,0,2,5,0],
                  [6,0,0,0,0,0,0,0,0],
                  [0,0,0,0,0,1,0,9,4],
                  [9,0,0,0,0,4,0,7,0],
                  [0,0,0,6,0,8,0,0,0],
                  [0,1,0,2,0,0,0,0,3],
                  [8,2,0,5,0,0,0,0,0],
                  [0,0,0,0,0,0,0,0,5],
                  [0,3,4,0,9,0,7,1,0]],
                 [[4,8,0,0,0,6,9,0,2],
                  [0,0,2,0,0,8,0,0,1],
                  [9,0,0,3,7,0,0,6,0],
                  [8,4,0,0,1,0,2,0,0],
                  [0,0,3,7,0,4,1,0,0],
                  [0,0,1,0,6,0,0,4,9],
                  [0,2,0,0,8,5,0,0,7],
                  [7,0,0,9,0,0,6,0,0],
                  [6,0,9,2,0,0,0,1,8]],
                 [[0,0,0,9,0,0,0,0,2],
                  [0,5,0,1,2,3,4,0,0],
                  [0,3,0,0,0,0,1,6,0],
                  [9,0,8,0,0,0,0,0,0],
                  [0,7,0,0,0,0,0,9,0],
                  [0,0,0,0,0,0,2,0,5],
                  [0,9,1,0,0,0,0,5,0],
                  [0,0,7,4,3,9,0,2,0],
                  [4,0,0,0,0,7,0,0,0]],
                 [[0,0,1,9,0,0,0,0,3],
                  [9,0,0,7,0,0,1,6,0],
                  [0,3,0,0,0,5,0,0,7],
                  [0,5,0,0,0,0,0,0,9],
                  [0,0,4,3,0,2,6,0,0],
                  [2,0,0,0,0,0,0,7,0],
                  [6,0,0,1,0,0,0,3,0],
                  [0,4,2,0,0,7,0,0,6],
                  [5,0,0,0,0,6,8,0,0]],
                 [[0,0,0,1,2,5,4,0,0],
                  [0,0,8,4,0,0,0,0,0],
                  [4,2,0,8,0,0,0,0,0],
                  [0,3,0,0,0,0,0,9,5],
                  [0,6,0,9,0,2,0,1,0],
                  [5,1,0,0,0,0,0,6,0],
                  [0,0,0,0,0,3,0,4,9],
                  [0,0,0,0,0,7,2,0,0],
                  [0,0,1,2,9,8,0,0,0]],
                 [[0,6,2,3,4,0,7,5,0],
                  [1,0,0,0,0,5,6,0,0],
                  [5,7,0,0,0,0,0,4,0],
                  [0,0,0,0,9,4,8,0,0],
                  [4,0,0,0,0,0,0,0,6],
                  [0,0,5,8,3,0,0,0,0],
                  [0,3,0,0,0,0,0,9,1],
                  [0,0,6,4,0,0,0,0,7],
                  [0,5,9,0,8,3,2,6,0]],
                 [[3,0,0,0,0,0,0,0,0],
                  [0,0,5,0,0,9,0,0,0],
                  [2,0,0,5,0,4,0,0,0],
                  [0,2,0,0,0,0,7,0,0],
                  [1,6,0,0,0,0,0,5,8],
                  [7,0,4,3,1,0,6,0,0],
                  [0,0,0,8,9,0,1,0,0],
                  [0,0,0,0,6,7,0,8,0],
                  [0,0,0,0,0,5,4,3,7]],
                 [[6,3,0,0,0,0,0,0,0],
                  [0,0,0,5,0,0,0,0,8],
                  [0,0,5,6,7,4,0,0,0],
                  [0,0,0,0,2,0,0,0,0],
                  [0,0,3,4,0,1,0,2,0],
                  [0,0,0,0,0,0,3,4,5],
                  [0,0,0,0,0,7,0,0,4],
                  [0,8,0,3,0,0,9,0,2],
                  [9,4,7,1,0,0,0,8,0]],
                 [[0,0,0,0,2,0,0,4,0],
                  [0,0,8,0,3,5,0,0,0],
                  [0,0,0,0,7,0,6,0,2],
                  [0,3,1,0,4,6,9,7,0],
                  [2,0,0,0,0,0,0,0,0],
                  [0,0,0,5,0,1,2,0,3],
                  [0,4,9,0,0,0,7,3,0],
                  [0,0,0,0,0,0,0,1,0],
                  [8,0,0,0,0,4,0,0,0]],
                 [[3,6,1,0,2,5,9,0,0],
                  [0,8,0,9,6,0,0,1,0],
                  [4,0,0,0,0,0,0,5,7],
                  [0,0,8,0,0,0,4,7,1],
                  [0,0,0,6,0,3,0,0,0],
                  [2,5,9,0,0,0,8,0,0],
                  [7,4,0,0,0,0,0,0,5],
                  [0,2,0,0,1,8,0,6,0],
                  [0,0,5,4,7,0,3,2,9]],
                 [[0,5,0,8,0,7,0,2,0],
                  [6,0,0,0,1,0,0,9,0],
                  [7,0,2,5,4,0,0,0,6],
                  [0,7,0,0,2,0,3,0,1],
                  [5,0,4,0,0,0,9,0,8],
                  [1,0,3,0,8,0,0,7,0],
                  [9,0,0,0,7,6,2,0,5],
                  [0,6,0,0,9,0,0,0,3],
                  [0,8,0,1,0,3,0,4,0]],
                 [[0,8,0,0,0,5,0,0,0],
                  [0,0,0,0,0,3,4,5,7],
                  [0,0,0,0,7,0,8,0,9],
                  [0,6,0,4,0,0,9,0,3],
                  [0,0,7,0,1,0,5,0,0],
                  [4,0,8,0,0,7,0,2,0],
                  [9,0,1,0,2,0,0,0,0],
                  [8,4,2,3,0,0,0,0,0],
                  [0,0,0,1,0,0,0,8,0]],
                 [[0,0,3,5,0,2,9,0,0],
                  [0,0,0,0,4,0,0,0,0],
                  [1,0,6,0,0,0,3,0,5],
                  [9,0,0,2,5,1,0,0,8],
                  [0,7,0,4,0,8,0,3,0],
                  [8,0,0,7,6,3,0,0,1],
                  [3,0,8,0,0,0,1,0,4],
                  [0,0,0,0,2,0,0,0,0],
                  [0,0,5,1,0,4,8,0,0]],
                 [[0,0,0,0,0,0,0,0,0],
                  [0,0,9,8,0,5,1,0,0],
                  [0,5,1,9,0,7,4,2,0],
                  [2,9,0,4,0,1,0,6,5],
                  [0,0,0,0,0,0,0,0,0],
                  [1,4,0,5,0,8,0,9,3],
                  [0,2,6,7,0,9,5,8,0],
                  [0,0,5,1,0,3,6,0,0],
                  [0,0,0,0,0,0,0,0,0]],
                 [[0,2,0,0,3,0,0,9,0],
                  [0,0,0,9,0,7,0,0,0],
                  [9,0,0,2,0,8,0,0,5],
                  [0,0,4,8,0,6,5,0,0],
                  [6,0,7,0,0,0,2,0,8],
                  [0,0,3,1,0,2,9,0,0],
                  [8,0,0,6,0,5,0,0,7],
                  [0,0,0,3,0,9,0,0,0],
                  [0,3,0,0,2,0,0,5,0]],
                 [[0,0,5,0,0,0,0,0,6],
                  [0,7,0,0,0,9,0,2,0],
                  [0,0,0,5,0,0,1,0,7],
                  [8,0,4,1,5,0,0,0,0],
                  [0,0,0,8,0,3,0,0,0],
                  [0,0,0,0,9,2,8,0,5],
                  [9,0,7,0,0,6,0,0,0],
                  [0,3,0,4,0,0,0,1,0],
                  [2,0,0,0,0,0,6,0,0]],
                 [[0,4,0,0,0,0,0,5,0],
                  [0,0,1,9,4,3,6,0,0],
                  [0,0,9,0,0,0,3,0,0],
                  [6,0,0,0,5,0,0,0,2],
                  [1,0,3,0,0,0,5,0,6],
                  [8,0,0,0,2,0,0,0,7],
                  [0,0,5,0,0,0,2,0,0],
                  [0,0,2,4,3,6,7,0,0],
                  [0,3,0,0,0,0,0,4,0]],
                 [[0,0,4,0,0,0,0,0,0],
                  [0,0,0,0,3,0,0,0,2],
                  [3,9,0,7,0,0,0,8,0],
                  [4,0,0,0,0,9,0,0,1],
                  [2,0,9,8,0,1,3,0,7],
                  [6,0,0,2,0,0,0,0,8],
                  [0,1,0,0,0,8,0,5,3],
                  [9,0,0,0,4,0,0,0,0],
                  [0,0,0,0,0,0,8,0,0]],
                 [[3,6,0,0,2,0,0,8,9],
                  [0,0,0,3,6,1,0,0,0],
                  [0,0,0,0,0,0,0,0,0],
                  [8,0,3,0,0,0,6,0,2],
                  [4,0,0,6,0,3,0,0,7],
                  [6,0,7,0,0,0,1,0,8],
                  [0,0,0,0,0,0,0,0,0],
                  [0,0,0,4,1,8,0,0,0],
                  [9,7,0,0,3,0,0,1,4]],
                 [[5,0,0,4,0,0,0,6,0],
                  [0,0,9,0,0,0,8,0,0],
                  [6,4,0,0,2,0,0,0,0],
                  [0,0,0,0,0,1,0,0,8],
                  [2,0,8,0,0,0,5,0,1],
                  [7,0,0,5,0,0,0,0,0],
                  [0,0,0,0,9,0,0,8,4],
                  [0,0,3,0,0,0,6,0,0],
                  [0,6,0,0,0,3,0,0,2]],
                 [[0,0,7,2,5,6,4,0,0],
                  [4,0,0,0,0,0,0,0,5],
                  [0,1,0,0,3,0,0,6,0],
                  [0,0,0,5,0,8,0,0,0],
                  [0,0,8,0,6,0,2,0,0],
                  [0,0,0,1,0,7,0,0,0],
                  [0,3,0,0,7,0,0,9,0],
                  [2,0,0,0,0,0,0,0,4],
                  [0,0,6,3,1,2,7,0,0]],
                 [[0,0,0,0,0,0,0,0,0],
                  [0,7,9,0,5,0,1,8,0],
                  [8,0,0,0,0,0,0,0,7],
                  [0,0,7,3,0,6,8,0,0],
                  [4,5,0,7,0,8,0,9,6],
                  [0,0,3,5,0,2,7,0,0],
                  [7,0,0,0,0,0,0,0,5],
                  [0,1,6,0,3,0,4,2,0],
                  [0,0,0,0,0,0,0,0,0]],
                 [[0,3,0,0,0,0,0,8,0],
                  [0,0,9,0,0,0,5,0,0],
                  [0,0,7,5,0,9,2,0,0],
                  [7,0,0,1,0,5,0,0,8],
                  [0,2,0,0,9,0,0,3,0],
                  [9,0,0,4,0,2,0,0,1],
                  [0,0,4,2,0,7,1,0,0],
                  [0,0,2,0,0,0,8,0,0],
                  [0,7,0,0,0,0,0,9,0]],
                 [[2,0,0,1,7,0,6,0,3],
                  [0,5,0,0,0,0,1,0,0],
                  [0,0,0,0,0,6,0,7,9],
                  [0,0,0,0,4,0,7,0,0],
                  [0,0,0,8,0,1,0,0,0],
                  [0,0,9,0,5,0,0,0,0],
                  [3,1,0,4,0,0,0,0,0],
                  [0,0,5,0,0,0,0,6,0],
                  [9,0,6,0,3,7,0,0,2]],
                 [[0,0,0,0,0,0,0,8,0],
                  [8,0,0,7,0,1,0,4,0],
                  [0,4,0,0,2,0,0,3,0],
                  [3,7,4,0,0,0,9,0,0],
                  [0,0,0,0,3,0,0,0,0],
                  [0,0,5,0,0,0,3,2,1],
                  [0,1,0,0,6,0,0,5,0],
                  [0,5,0,8,0,2,0,0,6],
                  [0,8,0,0,0,0,0,0,0]],
                 [[0,0,0,0,0,0,0,8,5],
                  [0,0,0,2,1,0,0,0,9],
                  [9,6,0,0,8,0,1,0,0],
                  [5,0,0,8,0,0,0,1,6],
                  [0,0,0,0,0,0,0,0,0],
                  [8,9,0,0,0,6,0,0,7],
                  [0,0,9,0,7,0,0,5,2],
                  [3,0,0,0,5,4,0,0,0],
                  [4,8,0,0,0,0,0,0,0]],
                 [[6,0,8,0,7,0,5,0,2],
                  [0,5,0,6,0,8,0,7,0],
                  [0,0,2,0,0,0,3,0,0],
                  [5,0,0,0,9,0,0,0,6],
                  [0,4,0,3,0,2,0,5,0],
                  [8,0,0,0,5,0,0,0,3],
                  [0,0,5,0,0,0,2,0,0],
                  [0,1,0,7,0,4,0,9,0],
                  [4,0,9,0,6,0,7,0,1]],
                 [[0,5,0,0,1,0,0,4,0],
                  [1,0,7,0,0,0,6,0,2],
                  [0,0,0,9,0,5,0,0,0],
                  [2,0,8,0,3,0,5,0,1],
                  [0,4,0,0,7,0,0,2,0],
                  [9,0,1,0,8,0,4,0,6],
                  [0,0,0,4,0,1,0,0,0],
                  [3,0,4,0,0,0,7,0,9],
                  [0,2,0,0,6,0,0,1,0]],
                 [[0,5,3,0,0,0,7,9,0],
                  [0,0,9,7,5,3,4,0,0],
                  [1,0,0,0,0,0,0,0,2],
                  [0,9,0,0,8,0,0,1,0],
                  [0,0,0,9,0,7,0,0,0],
                  [0,8,0,0,3,0,0,7,0],
                  [5,0,0,0,0,0,0,0,3],
                  [0,0,7,6,4,1,2,0,0],
                  [0,6,1,0,0,0,9,4,0]],
                 [[0,0,6,0,8,0,3,0,0],
                  [0,4,9,0,7,0,2,5,0],
                  [0,0,0,4,0,5,0,0,0],
                  [6,0,0,3,1,7,0,0,4],
                  [0,0,7,0,0,0,8,0,0],
                  [1,0,0,8,2,6,0,0,9],
                  [0,0,0,7,0,2,0,0,0],
                  [0,7,5,0,4,0,1,9,0],
                  [0,0,3,0,9,0,6,0,0]],
                 [[0,0,5,0,8,0,7,0,0],
                  [7,0,0,2,0,4,0,0,5],
                  [3,2,0,0,0,0,0,8,4],
                  [0,6,0,1,0,5,0,4,0],
                  [0,0,8,0,0,0,5,0,0],
                  [0,7,0,8,0,3,0,1,0],
                  [4,5,0,0,0,0,0,9,1],
                  [6,0,0,5,0,8,0,0,7],
                  [0,0,3,0,1,0,6,0,0]],
                 [[0,0,0,9,0,0,8,0,0],
                  [1,2,8,0,0,6,4,0,0],
                  [0,7,0,8,0,0,0,6,0],
                  [8,0,0,4,3,0,0,0,7],
                  [5,0,0,0,0,0,0,0,9],
                  [6,0,0,0,7,9,0,0,8],
                  [0,9,0,0,0,4,0,1,0],
                  [0,0,3,6,0,0,2,8,4],
                  [0,0,1,0,0,7,0,0,0]],
                 [[0,0,0,0,8,0,0,0,0],
                  [2,7,0,0,0,0,0,5,4],
                  [0,9,5,0,0,0,8,1,0],
                  [0,0,9,8,0,6,4,0,0],
                  [0,2,0,4,0,3,0,6,0],
                  [0,0,6,9,0,5,1,0,0],
                  [0,1,7,0,0,0,6,2,0],
                  [4,6,0,0,0,0,0,3,8],
                  [0,0,0,0,9,0,0,0,0]],
                 [[0,0,0,6,0,2,0,0,0],
                  [4,0,0,0,5,0,0,0,1],
                  [0,8,5,0,1,0,6,2,0],
                  [0,3,8,2,0,6,7,1,0],
                  [0,0,0,0,0,0,0,0,0],
                  [0,1,9,4,0,7,3,5,0],
                  [0,2,6,0,4,0,5,3,0],
                  [9,0,0,0,2,0,0,0,7],
                  [0,0,0,8,0,9,0,0,0]],
                 [[0,0,0,9,0,0,0,0,2],
                  [0,5,0,1,2,3,4,0,0],
                  [0,3,0,0,0,0,1,6,0],
                  [9,0,8,0,0,0,0,0,0],
                  [0,7,0,0,0,0,0,9,0],
                  [0,0,0,0,0,0,2,0,5],
                  [0,9,1,0,0,0,0,5,0],
                  [0,0,7,4,3,9,0,2,0],
                  [4,0,0,0,0,7,0,0,0]],
                 [[3,8,0,0,0,0,0,0,0],
                  [0,0,0,4,0,0,7,8,5],
                  [0,0,9,0,2,0,3,0,0],
                  [0,6,0,0,9,0,0,0,0],
                  [8,0,0,3,0,2,0,0,9],
                  [0,0,0,0,4,0,0,7,0],
                  [0,0,1,0,7,0,5,0,0],
                  [4,9,5,0,0,6,0,0,0],
                  [0,0,0,0,0,0,0,9,2]],
                 [[0,0,0,1,5,8,0,0,0],
                  [0,0,2,0,6,0,8,0,0],
                  [0,3,0,0,0,0,0,4,0],
                  [0,2,7,0,3,0,5,1,0],
                  [0,0,0,0,0,0,0,0,0],
                  [0,4,6,0,8,0,7,9,0],
                  [0,5,0,0,0,0,0,8,0],
                  [0,0,4,0,7,0,1,0,0],
                  [0,0,0,3,2,5,0,0,0]],
                 [[0,1,0,5,0,0,2,0,0],
                  [9,0,0,0,0,1,0,0,0],
                  [0,0,2,0,0,8,0,3,0],
                  [5,0,0,0,3,0,0,0,7],
                  [0,0,8,0,0,0,5,0,0],
                  [6,0,0,0,8,0,0,0,4],
                  [0,4,0,1,0,0,7,0,0],
                  [0,0,0,7,0,0,0,0,6],
                  [0,0,3,0,0,4,0,5,0]],
                 [[0,8,0,0,0,0,0,4,0],
                  [0,0,0,4,6,9,0,0,0],
                  [4,0,0,0,0,0,0,0,7],
                  [0,0,5,9,0,4,6,0,0],
                  [0,7,0,6,0,8,0,3,0],
                  [0,0,8,5,0,2,1,0,0],
                  [9,0,0,0,0,0,0,0,5],
                  [0,0,0,7,8,1,0,0,0],
                  [0,6,0,0,0,0,0,1,0]],
                 [[9,0,4,2,0,0,0,0,7],
                  [0,1,0,0,0,0,0,0,0],
                  [0,0,0,7,0,6,5,0,0],
                  [0,0,0,8,0,0,0,9,0],
                  [0,2,0,9,0,4,0,6,0],
                  [0,4,0,0,0,2,0,0,0],
                  [0,0,1,6,0,7,0,0,0],
                  [0,0,0,0,0,0,0,3,0],
                  [3,0,0,0,0,5,7,0,2]],
                 [[0,0,0,7,0,0,8,0,0],
                  [0,0,6,0,0,0,0,3,1],
                  [0,4,0,0,0,2,0,0,0],
                  [0,2,4,0,7,0,0,0,0],
                  [0,1,0,0,3,0,0,8,0],
                  [0,0,0,0,6,0,2,9,0],
                  [0,0,0,8,0,0,0,7,0],
                  [8,6,0,0,0,0,5,0,0],
                  [0,0,2,0,0,6,0,0,0]],
                 [[0,0,1,0,0,7,0,9,0],
                  [5,9,0,0,8,0,0,0,1],
                  [0,3,0,0,0,0,0,8,0],
                  [0,0,0,0,0,5,8,0,0],
                  [0,5,0,0,6,0,0,2,0],
                  [0,0,4,1,0,0,0,0,0],
                  [0,8,0,0,0,0,0,3,0],
                  [1,0,0,0,2,0,0,7,9],
                  [0,2,0,7,0,0,4,0,0]],
                 [[0,0,0,0,0,3,0,1,7],
                  [0,1,5,0,0,9,0,0,8],
                  [0,6,0,0,0,0,0,0,0],
                  [1,0,0,0,0,7,0,0,0],
                  [0,0,9,0,0,0,2,0,0],
                  [0,0,0,5,0,0,0,0,4],
                  [0,0,0,0,0,0,0,2,0],
                  [5,0,0,6,0,0,3,4,0],
                  [3,4,0,2,0,0,0,0,0]],
                 [[3,0,0,2,0,0,0,0,0],
                  [0,0,0,1,0,7,0,0,0],
                  [7,0,6,0,3,0,5,0,0],
                  [0,7,0,0,0,9,0,8,0],
                  [9,0,0,0,2,0,0,0,4],
                  [0,1,0,8,0,0,0,5,0],
                  [0,0,9,0,4,0,3,0,1],
                  [0,0,0,7,0,2,0,0,0],
                  [0,0,0,0,0,8,0,0,6]]],
        solveSudokuGrid = function (inputGrid) {
            inputGrid = cloneGrid(inputGrid);

            if (isSolved(inputGrid))
                return inputGrid;

            var emptyCell = findEmptyCell(inputGrid),
                cellX = emptyCell[0],
                cellY = emptyCell[1],
                taken = getHNumbers(inputGrid, cellY)
                    .concat(getVNumbers(inputGrid, cellX))
                    .concat(getSquareNumbers(inputGrid, cellX, cellY)),
                takenRegEx = eval("/[" + taken.join("") + "]+/g"),
                possibleValues = "123456789".replace(takenRegEx, "").split(""),
                output;

            for (var i=0; i<possibleValues.length; i++) {
                inputGrid[cellY][cellX] = +(possibleValues[i]);
                output = solveSudokuGrid(inputGrid);

                if (output)
                    return output;
            }

            return "";
        },
        findEmptyCell = function (grid) {
            for (var ix=0; ix<9; ix++)
                for (var iy=0; iy<9; iy++)
                    if (!grid[iy][ix])
                        return [ix, iy];

            return [];
        },
        isSolved = function (grid) {
            for (var ix=0; ix<9; ix++)
                for (var iy=0; iy<9; iy++)
                    if (!grid[iy][ix])
                        return false;

            return true;
        },
        getHNumbers = function (grid, y) {
            for (var i=0, numbers=[]; i<9; i++)
                if (grid[y][i])
                    numbers.push(grid[y][i]);

            return numbers.sort();
        },
        getVNumbers = function (grid, x) {
            for (var i=0, numbers=[]; i<9; i++)
                if (grid[i][x])
                    numbers.push(grid[i][x]);

            return numbers.sort();
        },
        getSquareNumbers = function (grid, x, y) {
            var minX = getMinOfSquare(x),
                minY = getMinOfSquare(y),
                maxX = getMaxOfSquare(x),
                maxY = getMaxOfSquare(y),
                numbers = [];

            for (var ix=minX; ix<=maxX; ix++)
                for (var iy=minY; iy<=maxY; iy++)
                    if (grid[iy][ix])
                        numbers.push(grid[iy][ix]);

            return numbers.sort();
        },
        getMinOfSquare = function (index) {
            return index - (index % 3);
        },
        getMaxOfSquare = function (index) {
            return index - (index % 3) + 2;
        },
        cloneGrid = function (grid) {
            var outputArray = [];

            for (var i=0; i<grid.length; i++)
                outputArray.push(grid[i].slice());

            return outputArray;
        },
        getThreeDigitNumber = function (grid) {
            return +(grid[0][0].toString() + 
                     grid[0][1].toString() + 
                     grid[0][2].toString());
        };

    for (var index=0; index<grids.length; index++) {
        solvedGrid = solveSudokuGrid(grids[index]);
        threeDigitNumber = getThreeDigitNumber(solvedGrid);
        sum += threeDigitNumber;
    }

    console.log("sum: " + sum);
    return sum;
};
